import { useState } from 'react';
import { Button } from '@/components/ui/button';
import { Input } from '@/components/ui/input';
import { Label } from '@/components/ui/label';
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';
import Icon from '@/components/ui/icon';

const federalDistricts = [
  '–¶–µ–Ω—Ç—Ä–∞–ª—å–Ω—ã–π —Ñ–µ–¥–µ—Ä–∞–ª—å–Ω—ã–π –æ–∫—Ä—É–≥',
  '–°–µ–≤–µ—Ä–æ-–ó–∞–ø–∞–¥–Ω—ã–π —Ñ–µ–¥–µ—Ä–∞–ª—å–Ω—ã–π –æ–∫—Ä—É–≥', 
  '–Æ–∂–Ω—ã–π —Ñ–µ–¥–µ—Ä–∞–ª—å–Ω—ã–π –æ–∫—Ä—É–≥',
  '–°–µ–≤–µ—Ä–æ-–ö–∞–≤–∫–∞–∑—Å–∫–∏–π —Ñ–µ–¥–µ—Ä–∞–ª—å–Ω—ã–π –æ–∫—Ä—É–≥',
  '–ü—Ä–∏–≤–æ–ª–∂—Å–∫–∏–π —Ñ–µ–¥–µ—Ä–∞–ª—å–Ω—ã–π –æ–∫—Ä—É–≥',
  '–£—Ä–∞–ª—å—Å–∫–∏–π —Ñ–µ–¥–µ—Ä–∞–ª—å–Ω—ã–π –æ–∫—Ä—É–≥',
  '–°–∏–±–∏—Ä—Å–∫–∏–π —Ñ–µ–¥–µ—Ä–∞–ª—å–Ω—ã–π –æ–∫—Ä—É–≥',
  '–î–∞–ª—å–Ω–µ–≤–æ—Å—Ç–æ—á–Ω—ã–π —Ñ–µ–¥–µ—Ä–∞–ª—å–Ω—ã–π –æ–∫—Ä—É–≥'
];

interface ConsultationFormProps {
  onSubmit?: (data: { name: string; phone: string; region: string }) => void;
}

interface ConsultationData {
  name: string;
  phone: string;
  region: string;
}

export default function ConsultationForm({ onSubmit }: ConsultationFormProps) {
  const [formData, setFormData] = useState({
    name: '',
    phone: '',
    region: ''
  });
  const [copied, setCopied] = useState(false);

  const formatConsultationData = (data: ConsultationData): string => {
    const currentDate = new Date().toLocaleString('ru-RU', {
      year: 'numeric',
      month: 'long', 
      day: 'numeric',
      hour: '2-digit',
      minute: '2-digit'
    });

    return `üìã –ó–ê–Ø–í–ö–ê –ù–ê –Æ–†–ò–î–ò–ß–ï–°–ö–£–Æ –ö–û–ù–°–£–õ–¨–¢–ê–¶–ò–Æ

üóì –î–∞—Ç–∞ –ø–æ–¥–∞—á–∏: ${currentDate}

üë§ –ö–ª–∏–µ–Ω—Ç: ${data.name}
üìû –¢–µ–ª–µ—Ñ–æ–Ω: ${data.phone}  
üó∫ –†–µ–≥–∏–æ–Ω: ${data.region}

üìù –°—Ç–∞—Ç—É—Å: –ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞
‚è∞ –¢—Ä–µ–±—É–µ—Ç –æ–±—Ä–∞–±–æ—Ç–∫–∏: –î–∞

---
–ó–∞—è–≤–∫–∞ —Å–æ–∑–¥–∞–Ω–∞ —á–µ—Ä–µ–∑ —Å–∞–π—Ç —é—Ä–∏–¥–∏—á–µ—Å–∫–∏—Ö —É—Å–ª—É–≥`;
  };

  const copyToClipboard = async (text: string) => {
    try {
      await navigator.clipboard.writeText(text);
      setCopied(true);
      setTimeout(() => setCopied(false), 3000);
      return true;
    } catch (err) {
      console.error('–û—à–∏–±–∫–∞ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è:', err);
      return false;
    }
  };

  const handleSubmit = (e: React.FormEvent) => {
    e.preventDefault();
    
    if (!formData.name || !formData.phone || !formData.region) {
      return;
    }

    // –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –∏ –∫–æ–ø–∏—Ä—É–µ–º –∑–∞—è–≤–∫—É
    const formattedData = formatConsultationData(formData);
    copyToClipboard(formattedData);

    onSubmit?.(formData);
    
    // –°–±—Ä–æ—Å —Ñ–æ—Ä–º—ã
    setFormData({
      name: '',
      phone: '',
      region: ''
    });
  };

  const handleInputChange = (field: string, value: string) => {
    setFormData(prev => ({
      ...prev,
      [field]: value
    }));
  };

  const isFormValid = formData.name && formData.phone && formData.region;

  return (
    <div className="bg-white/95 backdrop-blur-sm rounded-lg p-6 border border-slate-200/50">
      <div className="text-center mb-6">
        <h3 className="text-xl font-bold text-slate-900 mb-2">
          –ó–∞–∫–∞–∑–∞—Ç—å –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é
        </h3>
        <p className="text-slate-600 text-sm">
          –û—Å—Ç–∞–≤—å—Ç–µ –∑–∞—è–≤–∫—É –∏ –ø–æ–ª—É—á–∏—Ç–µ –±–µ—Å–ø–ª–∞—Ç–Ω—É—é –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é —é—Ä–∏—Å—Ç–∞
        </p>
      </div>

      <form onSubmit={handleSubmit} className="space-y-4">
        {/* –ò–º—è */}
        <div className="space-y-2">
          <Label htmlFor="name" className="text-slate-900 font-medium">
            –ò–º—è
          </Label>
          <Input
            id="name"
            type="text"
            placeholder="–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –∏–º—è"
            value={formData.name}
            onChange={(e) => handleInputChange('name', e.target.value)}
            className="bg-white/90 border-slate-300 focus:border-primary"
            required
          />
        </div>

        {/* –¢–µ–ª–µ—Ñ–æ–Ω */}
        <div className="space-y-2">
          <Label htmlFor="phone" className="text-slate-900 font-medium">
            –¢–µ–ª–µ—Ñ–æ–Ω
          </Label>
          <Input
            id="phone"
            type="tel"
            placeholder="+7 (___) ___-__-__"
            value={formData.phone}
            onChange={(e) => handleInputChange('phone', e.target.value)}
            className="bg-white/90 border-slate-300 focus:border-primary"
            required
          />
        </div>

        {/* –†–µ–≥–∏–æ–Ω */}
        <div className="space-y-2">
          <Label htmlFor="region" className="text-slate-900 font-medium">
            –§–µ–¥–µ—Ä–∞–ª—å–Ω—ã–π –æ–∫—Ä—É–≥
          </Label>
          <Select value={formData.region} onValueChange={(value) => handleInputChange('region', value)}>
            <SelectTrigger className="bg-white/90 border-slate-300 focus:border-primary">
              <SelectValue placeholder="–í—ã–±–µ—Ä–∏—Ç–µ —Ñ–µ–¥–µ—Ä–∞–ª—å–Ω—ã–π –æ–∫—Ä—É–≥" />
            </SelectTrigger>
            <SelectContent>
              {federalDistricts.map((district) => (
                <SelectItem key={district} value={district}>
                  {district}
                </SelectItem>
              ))}
            </SelectContent>
          </Select>
        </div>

        {/* –ö–Ω–æ–ø–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ */}
        <Button 
          type="submit" 
          className="w-full mt-6"
          disabled={!isFormValid}
        >
          <Icon name={copied ? "Check" : "Copy"} size={16} className="mr-2" />
          {copied ? "–ó–∞—è–≤–∫–∞ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∞!" : "–°–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å –∑–∞—è–≤–∫—É"}
        </Button>

        {/* –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ */}
        {copied && (
          <div className="mt-3 p-3 bg-green-50 border border-green-200 rounded-lg text-center">
            <div className="flex items-center justify-center space-x-2 text-green-700">
              <Icon name="CheckCircle" size={16} />
              <span className="text-sm font-medium">
                –ó–∞—è–≤–∫–∞ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∞ –≤ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞
              </span>
            </div>
            <p className="text-xs text-green-600 mt-1">
              –í—Å—Ç–∞–≤—å—Ç–µ –¥–∞–Ω–Ω—ã–µ –≤ –≤–∞—à—É CRM —Å–∏—Å—Ç–µ–º—É
            </p>
          </div>
        )}

        {/* –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è */}
        <p className="text-xs text-slate-500 text-center mt-4">
          –ü—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –∫–Ω–æ–ø–∫–∏ –∑–∞—è–≤–∫–∞ –±—É–¥–µ—Ç —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∞ –≤ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞
        </p>
      </form>
    </div>
  );
}